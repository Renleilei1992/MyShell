" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by
" the call to :runtime you can find below.  If you wish to change any of those
" settings, you should do it in this file (/etc/vim/vimrc), since debian.vim
" will be overwritten everytime an upgrade of the vim packages is performed.
" It is recommended to make changes after sourcing debian.vim since it alters
" the value of the 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
"set compatible

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
if has("syntax")
  syntax on
endif

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
"set background=dark

" Uncomment the following to have Vim jump to the last position when
" reopening a file
"if has("autocmd")
"  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
"endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
"if has("autocmd")
"  filetype plugin indent on
"endif

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
"set showcmd		" Show (partial) command in status line.
"set showmatch		" Show matching brackets.
"set ignorecase		" Do case insensitive matching
"set smartcase		" Do smart case matching
"set incsearch		" Incremental search
"set autowrite		" Automatically save before commands like :next and :make
"set hidden		" Hide buffers when they are abandoned
"set mouse=a		" Enable mouse usage (all modes)

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif

set tabstop=4

set fileencodings=ucs-bom,utf-8,utf-16,gbk,big5,gb18030,latin1
set enc=utf8
set fencs=utf8,gbk,gb2312,gb18030

"以下三部分用于添加vim文件头的设置
"第一部分
"将键盘上的F4功能键映射为添加作者信息的快捷键
"map <F4> ms:call TitleDet()<cr>'s
"function AddTitle()
"    call append(0,"/***************************************************")
"    call append(1,"*                                                  *")
"    call append(2,"*                                                  *")
"    call append(3,"* Author  : Renleilei - renleilei1992@foxmail.com  *")
"    call append(4,"* Contact : 342399069<QQ>                          *")
"    call append(5,"* Last modified: ".strftime("%Y-%m-%d %H:%M"))
"    call append(6,"* Filename: ".expand("%:t"))
"    call append(7,"* Description: ---                                 *")
"    call append(8,"* !/bin/bash                                       *")
"    call append(9,"***************************************************/")
"    echohl WarningMsg | echo "Successful in adding the copyright." | echohl None
"endfunction

map <F4> ms:call TitleDet()<cr>'s
func SetComment()  
    call setline(1,"/*================================================================")   
    call append(line("."),   "*   Copyright (C) ".strftime("%Y")." Renleilei. All rights reserved.")  
    call append(line(".")+1, "*   ")   
    call append(line(".")+2, "*   文件名称：".expand("%:t"))   
    call append(line(".")+3, "*   创 建 者：Renleilei (renleilei@foxmail.com)")  
    call append(line(".")+4, "*   创建日期：".strftime("%Y年%m月%d日"))   
    call append(line(".")+5, "*   描    述：")   
    call append(line(".")+6, "*   版    本: Version 1.00")  
    call append(line(".")+7, "================================================================*/")   
    call append(line(".")+8, "")  
    call append(line(".")+9, "")  
endfunc  
  
" 加入shell,Makefile注释  
func SetComment_sh()  
    call setline(3, "#================================================================")   
    call setline(4, "#   Copyright (C) ".strftime("%Y")." Renleilei. All rights reserved.")  
    call setline(5, "#   ")   
    call setline(6, "#   文件名称：".expand("%:t"))   
    call setline(7, "#   创 建 者：Renleilei (renleilei@foxmail.com)")  
    call setline(8, "#   创建日期：".strftime("%Y年%m月%d日"))   
    call setline(9, "#   描    述：")   
    call setline(10, "#   版    本: Version 1.00")  
    call setline(11, "#================================================================")  
    call setline(12, "")  
    call setline(13, "")  
endfunc   





"此处为预显示的格式
"第二部分
"更新最近修改时间和文件名
"function UpdateTitle()
"    normal m'
"    execute '/# *Last modified:/s@:.*$@\=strftime(":\t%Y-%m-%d %H:%M")@'
"    normal ''
"    normal mk
"    execute '/# *Filename:/s@:.*$@\=":\t\t".expand("%:t")@'
"    execute "noh"
"    normal 'k
"    echohl WarningMsg | echo "Successful in updating the copy right." | echohl None
"endfunction
"第三部分
"判断前10行代码里面，是否有Last modified这个单词（为更新时间的依据），
"如果没有的话，代表没有添加过作者信息，需要新添加；
"如果有的话，那么只需要更新即可
function TitleDet()
	if &filetype == 'make'   
        call setline(1,"")   
        call setline(2,"")  
        call SetComment_sh()  
  
    elseif &filetype == 'sh'   
        call setline(1,"#!/bin/bash")   
        call setline(2,"")  
        call SetComment_sh()
	else
		call SetComment()
		if expand("%:e") == 'hpp'   
          call append(line(".")+10, "#ifndef _".toupper(expand("%:t:r"))."_H")   
          call append(line(".")+11, "#define _".toupper(expand("%:t:r"))."_H")   
          call append(line(".")+12, "#ifdef __cplusplus")   
          call append(line(".")+13, "extern \"C\"")   
          call append(line(".")+14, "{")   
          call append(line(".")+15, "#endif")   
          call append(line(".")+16, "")   
          call append(line(".")+17, "#ifdef __cplusplus")   
          call append(line(".")+18, "}")   
          call append(line(".")+19, "#endif")   
          call append(line(".")+20, "#endif //".toupper(expand("%:t:r"))."_H")   
  
         elseif expand("%:e") == 'h'   
        call append(line(".")+10, "#pragma once")   
  
         elseif &filetype == 'c'   
        call append(line(".")+10,"#include \"".expand("%:t:r").".h\"")   
  
         elseif &filetype == 'cpp'   
        call append(line(".")+10, "#include \"".expand("%:t:r").".h\"")   
  
         endif  
  
    endif  
"    	let n=1
"    	while n < 10
"    	    let line = getline(n)
"    	    if line =~ '^\#\s*\S*Last\smodified:\S*.*$'
"    	        call UpdateTitle()
"    	        return
"    	    endif
"    	    let n = n + 1
"    	endwhile
"    	call AddTitle()
endfunction
